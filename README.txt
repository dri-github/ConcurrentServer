Репозиторий проекта: https://github.com/dri-github/ConcurrentServer

=======================================================================================
|                                    !!! ВАЖНО !!!                                    |
|     Сервер находится на этапе разработки и не подвергался тщательному тестированию  |
| в следствии чего возможно наличие нестабильности в процессе его работы, имеются     |
| отдельные моменты реализации приводящие к потенциально опасным ситуациям: в         |
| реализации accept_server закрытие процесса реализовано через TerminateThread        |
| это может привести к утечке памяти или некоректному закрытию потключаемого          |
| пользователя (необходимо переписывать под работу в неблокирующем режиме - это       |
| требует переписывания всех accept и recv).                                          |
=======================================================================================



Конфигурационный файл (conf.ini):
===================- conf.ini -===================
[main]                                                    # Главный блок парсинга файла
accept_servers = accept_server_main, accept_server_double # Список потоков для подключений создаваемых при запуске сервера
startup = ./Services/echo.dll, ./Services/time.dll        # Список библиотек (сервисов) принудительно подгружаемых при запуске сервера, статус создания FIXED
default = ./Services/echo.dll                             # Не используется (планируется для определения принудительного сервиса выбираемого dispatch_server, без учета выбора пользователя)

[accept_server_main]                                      # Название потока для подключений (используется только при парсинге ini файла)
port = 2000                                               # Порт потока
ip = 0.0.0.0                                              # IP потока

[accept_server_double]
port = 2020
ip = 0.0.0.0
==================================================



Утилиты испульзуемые для управения ConcurrentServer через AdminConsolePipe:
====================- libctl -====================
| Описание: Используется для управления встроенной системой загрузки библиотек (секвисов).
|
| Список комманд:
|   > libctl ps - отображает список загруженных в память и заблокированных библиотек
|   > libctl state <name> <status> - устанавливает статус для указанной библиотеки:
|       <name>: ./Services/echo.dll (пример)
|       <status>: 0 (LOADED) - библиотека загружена, при отключении последнего пользователя выполнится выгрузка из памяти, при отсутствии библиотеки в списке загруженных будет выполнена принудительная подгрузка
|                 1 (LOCKED) - библиотека заблокированна для использования (принудительно выгружается из памяти), может быть заблокированна несуществующая библиотека на случай предварительной блокировки при добавлении, при наличии пользователей использующих библиотеку доступ будет принудительно сброшен
|                 2 (WAITLOCKED) - блокировка библиотеки для последующих использований и ожидание отключения всех использующих пользователей для окончательной блокировки (перевода в состояние LOCKED)
|                 3 (FIXED) - аналогично LOADED за тем исключением, что библиотека будет оставаться в памяти даже при отсутствии использующих пользователей
|
| Пример использования:
|   libctl state ./Services/echo.dll 1
==================================================
====================- acserv -====================
| Описание: Управляет генерацией потоков для подключения.
|
| Список комманд:
|   > acserv ps - отображает список существующих в системе потоков для подключения
|   > acserv start - выполняет запуск всех потоков для подключения
|   > acserv stop - останавливает выполнение всех потоков для подключений
|   > acserv state <port> <status> - устанавливает статус для указанного потока подключения
|       <port>: 2000 (пример)
|       <status>: 0 (CLOSE) - при переводе процесса в данное состояние происходит автоматическое закрытие последнего
|                 1 (START) - процесс для подключений находится в активном состоянии, при отсутствии процесса происходит его создание для указанного порта
|                 2 (STOP) - процесс для подключений приостановлен
|
| Пример использования:
|   acserv state 2000 1
==================================================